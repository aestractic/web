---
// Importaciones necesarias para Astro
import { Image } from 'astro:assets';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Hero from '../components/Hero.astro';
import Philosophy from '../components/Philosophy.astro';
import Treatments from '../components/Treatments.astro';
import Schedule from '../components/Schedule.astro';
import '../styles/global.css';
// Nota: En Astro necesitarás crear o instalar los componentes UI
// De momento usaré los componentes tal cual para que tú puedas adaptarlos después

interface Props {
  title?: string;
}

const { title = "L'Élixir de Miin" } = Astro.props;
---
<!doctype html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title}</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@300;400;500&display=swap" rel="stylesheet">
  <style>
    /* Puedes incluir estilos globales aquí o importarlos */
    body {
      margin: 0;
      padding: 0;
      font-family: system-ui, sans-serif;
      background-color: #0A0A0B;
      color: #E8E8E8;
    }
  </style>
</head>
<body class="bg-dark text-light min-h-screen flex flex-col">
  <Header />
  <main class="flex-1">
    <Hero />
    <Philosophy />
    <Treatments />
    <Schedule />
  </main>
  <Footer />

  <script>
    // Script del lado del cliente para manejar interactividad
    document.addEventListener('DOMContentLoaded', () => {
      // Configurar botón de WhatsApp
      const whatsAppButton = document.getElementById('whatsapp-button');
      if (whatsAppButton) {
        whatsAppButton.addEventListener('click', () => {
          window.open('https://wa.me/2229300680?text=%C2%A1Hola%21%20Me%20gustar%C3%ADa%20saber%20m%C3%A1s%20sobre%20tus%20servicios.', '_blank');
        });
      }

      // Aquí puedes agregar más funcionalidad para manejar los diálogos de consulta
      const bookButtons = document.querySelectorAll('.book-consultation');
      bookButtons.forEach(button => {
        button.addEventListener('click', () => {
          const treatment = button.getAttribute('data-treatment');
          alert(`Booking consultation for ${treatment}. \nThis would open a dialog in the fully implemented version.`);
          // Aquí podrías activar un modal o diálogo
        });
      });
    });
  </script>
</body>
</html>
